version: '1.0'

services:
  api:
    image: ${DOCKER_REGISTRY-}api
    build:
      context: .
      dockerfile: API/Dockerfile
    env_file: ".api.env"
    ports:
      - "5000:8080"
      - "5001:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
      - ./Keycloak.Tests/bin/Debug/net8.0/Certs/certificate.crt:/usr/local/share/ca-certificates/certificate.crt

  keycloak-postgres:
    container_name: postgres_keycloak
    image: postgres:16
    volumes:
      - ./db-data:/var/lib/postgresql/data/
      - ./sql:/docker-entrypoint-initdb.d/:ro
    env_file: ".postgres.env"
    healthcheck:
      test: pg_isready -d postgres
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - "5432:5432"
    deploy:
      resources:
        limits:
          memory: 4G

  postgres_exporter:
    container_name: exporter_container
    image: prometheuscommunity/postgres-exporter:v0.10.1
    env_file: ".postgres.env"
    volumes:
      - ./queries.yaml:/etc/postgres_exporter/queries.yaml:ro
    ports:
      - "9187:9187"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 500M

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    env_file: ".postgres.env"
    ports:
      - "5050:80"

  keycloak:
    image: keycloak/keycloak:26.0
    container_name: keycloak
    command: start
    env_file: ".keycloak.env"
    depends_on:
      keycloak-postgres:
        condition: service_healthy
    ports:
      - "8443:8443"
      - "8080:8080"
    healthcheck:
      start_period: 10s
      interval: 30s
      retries: 3
      timeout: 5s
    volumes:
      - ./Keycloak.Tests/bin/Debug/net8.0/Certs:/opt/keycloak/certs
      - ./opt/keycloak/themes:/opt/keycloak/themes

  prometheus:
    image: prom/prometheus:latest
    container_name: Prometheus
    ports:
      - "9090:9090"

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: Jaeger
    ports:
      - "4317:4317"
      - "4318:4318"
      - "16686:16686"

